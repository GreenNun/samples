/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package eu.bausov.kafkaavro.avdl;

import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class CustomException extends org.apache.avro.specific.SpecificExceptionBase implements org.apache.avro.specific.SpecificRecord {
    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"error\",\"name\":\"CustomException\",\"namespace\":\"eu.bausov.kafkaavro.avdl\",\"fields\":[{\"name\":\"message\",\"type\":\"string\"}]}");
    private static final long serialVersionUID = -2467051261949651164L;
    private static SpecificData MODEL$ = new SpecificData();
    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<CustomException>
            WRITER$ = (org.apache.avro.io.DatumWriter<CustomException>) MODEL$.createDatumWriter(SCHEMA$);
    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<CustomException>
            READER$ = (org.apache.avro.io.DatumReader<CustomException>) MODEL$.createDatumReader(SCHEMA$);
    @Deprecated
    public java.lang.CharSequence message$;

    public CustomException() {
        super();
    }

    public CustomException(Object value) {
        super(value);
    }

    public CustomException(Throwable cause) {
        super(cause);
    }

    public CustomException(Object value, Throwable cause) {
        super(value, cause);
    }

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    /**
     * Creates a new CustomException RecordBuilder.
     *
     * @return A new CustomException RecordBuilder
     */
    public static eu.bausov.kafkaavro.avdl.CustomException.Builder newBuilder() {
        return new eu.bausov.kafkaavro.avdl.CustomException.Builder();
    }

    /**
     * Creates a new CustomException RecordBuilder by copying an existing Builder.
     *
     * @param other The existing builder to copy.
     * @return A new CustomException RecordBuilder
     */
    public static eu.bausov.kafkaavro.avdl.CustomException.Builder newBuilder(eu.bausov.kafkaavro.avdl.CustomException.Builder other) {
        if (other == null) {
            return new eu.bausov.kafkaavro.avdl.CustomException.Builder();
        } else {
            return new eu.bausov.kafkaavro.avdl.CustomException.Builder(other);
        }
    }

    /**
     * Creates a new CustomException RecordBuilder by copying an existing CustomException instance.
     *
     * @param other The existing instance to copy.
     * @return A new CustomException RecordBuilder
     */
    public static eu.bausov.kafkaavro.avdl.CustomException.Builder newBuilder(eu.bausov.kafkaavro.avdl.CustomException other) {
        if (other == null) {
            return new eu.bausov.kafkaavro.avdl.CustomException.Builder();
        } else {
            return new eu.bausov.kafkaavro.avdl.CustomException.Builder(other);
        }
    }

    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return message$;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    // Used by DatumReader.  Applications should not call.
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                message$ = (java.lang.CharSequence) value$;
                break;
            default:
                throw new org.apache.avro.AvroRuntimeException("Bad index");
        }
    }

    /**
     * Gets the value of the 'message$' field.
     *
     * @return The value of the 'message$' field.
     */
    public java.lang.CharSequence getMessage$() {
        return message$;
    }

    /**
     * Sets the value of the 'message$' field.
     *
     * @param value the value to set.
     */
    public void setMessage$(java.lang.CharSequence value) {
        this.message$ = value;
    }

    @Override
    public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @Override
    public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    /**
     * RecordBuilder for CustomException instances.
     */
    public static class Builder extends org.apache.avro.specific.SpecificErrorBuilderBase<CustomException>
            implements org.apache.avro.data.ErrorBuilder<CustomException> {

        private java.lang.CharSequence message$;

        /**
         * Creates a new Builder
         */
        private Builder() {
            super(SCHEMA$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         *
         * @param other The existing Builder to copy.
         */
        private Builder(eu.bausov.kafkaavro.avdl.CustomException.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.message$)) {
                this.message$ = data().deepCopy(fields()[0].schema(), other.message$);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
        }

        /**
         * Creates a Builder by copying an existing CustomException instance
         *
         * @param other The existing instance to copy.
         */
        private Builder(eu.bausov.kafkaavro.avdl.CustomException other) {
            super(other);
            if (isValidValue(fields()[0], other.message$)) {
                this.message$ = data().deepCopy(fields()[0].schema(), other.message$);
                fieldSetFlags()[0] = true;
            }
        }

        @Override
        public eu.bausov.kafkaavro.avdl.CustomException.Builder setValue(Object value) {
            super.setValue(value);
            return this;
        }

        @Override
        public eu.bausov.kafkaavro.avdl.CustomException.Builder clearValue() {
            super.clearValue();
            return this;
        }

        @Override
        public eu.bausov.kafkaavro.avdl.CustomException.Builder setCause(Throwable cause) {
            super.setCause(cause);
            return this;
        }

        @Override
        public eu.bausov.kafkaavro.avdl.CustomException.Builder clearCause() {
            super.clearCause();
            return this;
        }

        /**
         * Gets the value of the 'message$' field.
         *
         * @return The value.
         */
        public java.lang.CharSequence getMessage$() {
            return message$;
        }


        /**
         * Sets the value of the 'message$' field.
         *
         * @param value The value of 'message$'.
         * @return This builder.
         */
        public eu.bausov.kafkaavro.avdl.CustomException.Builder setMessage$(java.lang.CharSequence value) {
            validate(fields()[0], value);
            this.message$ = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'message$' field has been set.
         *
         * @return True if the 'message$' field has been set, false otherwise.
         */
        public boolean hasMessage$() {
            return fieldSetFlags()[0];
        }


        /**
         * Clears the value of the 'message$' field.
         *
         * @return This builder.
         */
        public eu.bausov.kafkaavro.avdl.CustomException.Builder clearMessage$() {
            message$ = null;
            fieldSetFlags()[0] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public CustomException build() {
            try {
                CustomException record = new CustomException(getValue(), getCause());
                record.message$ = fieldSetFlags()[0] ? this.message$ : (java.lang.CharSequence) defaultValue(fields()[0]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

}










